name: 'GSIサーバーへのデプロイ'

on:
  push:
    branches: [ gh-pages ]
jobs:
  deploy:
    permissions:
      id-token: write
      contents: read
    if: github.repository == 'gsimaps-cicd/gsimaps-internal'
    runs-on: ubuntu-latest
    env:
      DEPLOY_ROLE_ARN: ${{ secrets.GSIMAPS_DEPLOY_ROLE_ARN }}
      S3_DEPLOY_BUCKET_NAME: ${{ secrets.S3_DEPLOY_BUCKET_NAME }}
      CLOUDFRONT_DISTRIBUTION_ID: "E22UPU54MR7TDG"

    steps:
      - uses: actions/checkout@v4
        with:
          ref: gh-pages
      - name: HTMLファイルの内容を修正
        run: |
          # index.htmlの修正
          sed -i '6a\ <link rel="apple-touch-icon" href="apple-touch-icon.png" />' index.html
          sed -i 's/<title>.*<\/title>/<title>地理院地図 \/ GSI Maps | 国土地理院<\/title>/' index.html
          sed -i -z 's/<script type="text\/javascript">\s*GSI\.GLOBALS\.isCreditShow = true;\s*<\/script>//g' index.html
          sed -i 's/<div id="title_logo_upper">.*<\/div>/<div id="title_logo_upper">地理院地図<\/div>/' index.html
          sed -i 's/<div id="title_logo_lower">.*<\/div>/<div id="title_logo_lower">（電子国土WEB）<\/div>/' index.html

          # index_m.html の修正
          sed -i 's/<title>.*<\/title>/<title>地理院地図 \/ GSI Maps\｜国土地理院<\/title>/' index_m.html
          sed -i '/GSI.GLOBALS.isCreditShow = true;/,+2d' index_m.html
          sed -i 's/<div class="logoarea"><\/div>/<div class="logoarea"><a style="text-decoration:none;" href=""><img class="logoimage" src="image\/m_logo.jpg"><\/a><\/div>/' index_m.html

          # index_3d.html の修正
          sed -i 's/<title>.*<\/title>/<title>地理院地図3D<\/title>/' index_3d.html

          # globe/index_globe.html の修正
          sed -i 's/<title>.*<\/title>/<title>地理院地図Globe<\/title>/' globe/index_globe.html
          sed -i 's/<div id="title_logo_upper">.*<\/div>/<div id="title_logo_upper">地理院地図<\/div>/' globe/index_globe.html
          sed -i 's/<div id="title_logo_lower">.*<\/div>/<div id="title_logo_lower">Globe<\/div>/' globe/index_globe.html

      - uses: aws-actions/configure-aws-credentials@v4
        if: ${{ env.DEPLOY_ROLE_ARN != '' }}
        with:
          aws-region: ap-northeast-1
          role-to-assume: ${{ env.DEPLOY_ROLE_ARN }}
          fetch-depth: 0
      - name: 変更ファイルの特定とS3デプロイ
        run: |
          # 除外したファイルのパターンを定義
          EXCLUDED_PATTERNS=(".git/*" ".github/*" "*.md" "LICENSE*" ".gitignore" "package.json" "package-lock.json" ".editorconfig" ".env" ".gitattributes" "*.yml" "*.yaml" "image/print/title.png")
          # 変更があったファイルをフィルタリングして直接デプロイ
          PATHS=()
          git diff --diff-filter=AM --name-only ${{ github.event.before }} ${{ github.sha }} | while read -r file; do
            # ファイルが存在し、除外パターンに一致しないかチェック
            if [ -f "$file" ]; then
              EXCLUDED=false
              for pattern in "${EXCLUDED_PATTERNS[@]}"; do
                if [[ "$file" == $pattern ]]; then
                  EXCLUDED=true
                  break
                fi
              done
              if [ "$EXCLUDED" = false ]; then
                # S3にアップロード
                aws s3 cp "$file" "s3://${S3_DEPLOY_BUCKET_NAME}/$file"
                PATHS+=("/$file")
              fi
              echo "デプロイが完了しました"
            else
              echo "変更があったファイルが存在しないのでスキップします"
            fi
          done
          # デプロイしたファイルがあればCloudFrontキャッシュを無効化
          if [ ${#PATHS[@]} -gt 0 ]; then
            # CloudFrontキャッシュ無効化の実行
            aws cloudfront create-invalidation \
              --distribution-id ${CLOUDFRONT_DISTRIBUTION_ID} \
              --paths "${PATHS[@]}"
            echo "キャッシュ無効化を実行しました"
          else
            echo "アップロードされたファイルがないため、キャッシュ無効化はスキップします"
          fi
